<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.achain.mapper.SscContractConfigMapper" >
    <resultMap id="BaseResultMap" type="com.achain.domain.entity.SscContractConfig" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
        <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
        <result column="url_index" property="urlIndex" jdbcType="TINYINT" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="url_name" property="urlName" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, contract_id, contract_name, url_index, url, url_name, create_time, update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.achain.domain.entity.SscContractConfigCriteria" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_ssc_contract_config
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="offSet != null and offSet != -1" >
            limit #{offSet} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from tb_ssc_contract_config
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from tb_ssc_contract_config
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.achain.domain.entity.SscContractConfigCriteria" >
        delete from tb_ssc_contract_config
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.achain.domain.entity.SscContractConfig" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tb_ssc_contract_config (contract_id, contract_name, url_index,
        url, url_name, create_time,
        update_time)
        values (#{contractId,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, #{urlIndex,jdbcType=TINYINT},
        #{url,jdbcType=VARCHAR}, #{urlName,jdbcType=VARCHAR}, now(),
        now())
    </insert>
    <insert id="insertSelective" parameterType="com.achain.domain.entity.SscContractConfig" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tb_ssc_contract_config
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="contractId != null" >
                contract_id,
            </if>
            <if test="contractName != null" >
                contract_name,
            </if>
            <if test="urlIndex != null" >
                url_index,
            </if>
            <if test="url != null" >
                url,
            </if>
            <if test="urlName != null" >
                url_name,
            </if>
            create_time,
            update_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="contractId != null" >
                #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="contractName != null" >
                #{contractName,jdbcType=VARCHAR},
            </if>
            <if test="urlIndex != null" >
                #{urlIndex,jdbcType=TINYINT},
            </if>
            <if test="url != null" >
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="urlName != null" >
                #{urlName,jdbcType=VARCHAR},
            </if>
            now(),
            now(),
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.achain.domain.entity.SscContractConfigCriteria" resultType="java.lang.Integer" >
        select count(*) from tb_ssc_contract_config
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update tb_ssc_contract_config
        <set >
            update_time = now(),
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.contractId != null" >
                contract_id = #{record.contractId,jdbcType=VARCHAR},
            </if>
            <if test="record.contractName != null" >
                contract_name = #{record.contractName,jdbcType=VARCHAR},
            </if>
            <if test="record.urlIndex != null" >
                url_index = #{record.urlIndex,jdbcType=TINYINT},
            </if>
            <if test="record.url != null" >
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.urlName != null" >
                url_name = #{record.urlName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update tb_ssc_contract_config
        set id = #{record.id,jdbcType=INTEGER},
        contract_id = #{record.contractId,jdbcType=VARCHAR},
        contract_name = #{record.contractName,jdbcType=VARCHAR},
        url_index = #{record.urlIndex,jdbcType=TINYINT},
        url = #{record.url,jdbcType=VARCHAR},
        url_name = #{record.urlName,jdbcType=VARCHAR},
        update_time = now()
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.achain.domain.entity.SscContractConfig" >
        update tb_ssc_contract_config
        <set >
            update_time = now(),
            <if test="contractId != null" >
                contract_id = #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="contractName != null" >
                contract_name = #{contractName,jdbcType=VARCHAR},
            </if>
            <if test="urlIndex != null" >
                url_index = #{urlIndex,jdbcType=TINYINT},
            </if>
            <if test="url != null" >
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="urlName != null" >
                url_name = #{urlName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.achain.domain.entity.SscContractConfig" >
        update tb_ssc_contract_config
        set contract_id = #{contractId,jdbcType=VARCHAR},
        contract_name = #{contractName,jdbcType=VARCHAR},
        url_index = #{urlIndex,jdbcType=TINYINT},
        url = #{url,jdbcType=VARCHAR},
        url_name = #{urlName,jdbcType=VARCHAR},
        update_time = now()
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>