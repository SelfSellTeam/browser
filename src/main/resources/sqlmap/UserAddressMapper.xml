<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.achain.mapper.UserAddressMapper" >
  <resultMap id="BaseResultMap" type="com.achain.domain.entity.UserAddress" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="user_address" property="userAddress" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="BIGINT" />
    <result column="coin_type" property="coinType" jdbcType="VARCHAR" />
    <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="trans_num" property="transNum" jdbcType="INTEGER" />
    <result column="last_trx_time" property="lastTrxTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account_name, user_address, balance, coin_type, contract_id, trans_num, last_trx_time,
    create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.achain.domain.entity.UserAddressCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offSet != null and offSet != -1" >
      limit #{offSet} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_user_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.achain.domain.entity.UserAddressCriteria" >
    delete from tb_user_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.achain.domain.entity.UserAddress" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user_address (account_name, user_address, balance,
    coin_type, contract_id, trans_num,
    last_trx_time, create_time, update_time
    )
    values (#{accountName,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR}, #{balance,jdbcType=BIGINT},
    #{coinType,jdbcType=VARCHAR}, #{contractId,jdbcType=VARCHAR}, #{transNum,jdbcType=INTEGER},
    #{lastTrxTime,jdbcType=TIMESTAMP}, now(), now()
    )
  </insert>
  <insert id="insertSelective" parameterType="com.achain.domain.entity.UserAddress" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="userAddress != null" >
        user_address,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="coinType != null" >
        coin_type,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="transNum != null" >
        trans_num,
      </if>
      <if test="lastTrxTime != null" >
        last_trx_time,
      </if>
      create_time,
      update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null" >
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=BIGINT},
      </if>
      <if test="coinType != null" >
        #{coinType,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="transNum != null" >
        #{transNum,jdbcType=INTEGER},
      </if>
      <if test="lastTrxTime != null" >
        #{lastTrxTime,jdbcType=TIMESTAMP},
      </if>
      now(),
      now(),
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.achain.domain.entity.UserAddressCriteria" resultType="java.lang.Integer" >
    select count(*) from tb_user_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_user_address
    <set >
      update_time = now(),
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.userAddress != null" >
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=BIGINT},
      </if>
      <if test="record.coinType != null" >
        coin_type = #{record.coinType,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null" >
        contract_id = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.transNum != null" >
        trans_num = #{record.transNum,jdbcType=INTEGER},
      </if>
      <if test="record.lastTrxTime != null" >
        last_trx_time = #{record.lastTrxTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_user_address
    set id = #{record.id,jdbcType=INTEGER},
    account_name = #{record.accountName,jdbcType=VARCHAR},
    user_address = #{record.userAddress,jdbcType=VARCHAR},
    balance = #{record.balance,jdbcType=BIGINT},
    coin_type = #{record.coinType,jdbcType=VARCHAR},
    contract_id = #{record.contractId,jdbcType=VARCHAR},
    trans_num = #{record.transNum,jdbcType=INTEGER},
    last_trx_time = #{record.lastTrxTime,jdbcType=TIMESTAMP},
    update_time = now()
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.achain.domain.entity.UserAddress" >
    update tb_user_address
    <set >
      update_time = now(),
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null" >
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="coinType != null" >
        coin_type = #{coinType,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="transNum != null" >
        trans_num = #{transNum,jdbcType=INTEGER},
      </if>
      <if test="lastTrxTime != null" >
        last_trx_time = #{lastTrxTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.achain.domain.entity.UserAddress" >
    update tb_user_address
    set account_name = #{accountName,jdbcType=VARCHAR},
    user_address = #{userAddress,jdbcType=VARCHAR},
    balance = #{balance,jdbcType=BIGINT},
    coin_type = #{coinType,jdbcType=VARCHAR},
    contract_id = #{contractId,jdbcType=VARCHAR},
    trans_num = #{transNum,jdbcType=INTEGER},
    last_trx_time = #{lastTrxTime,jdbcType=TIMESTAMP},
    update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertRecordBatch" parameterType="java.util.List" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user_address (account_name, user_address, balance,coin_type,contract_id,
    trans_num, last_trx_time, create_time,
    update_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.accountName,jdbcType=VARCHAR}, #{item.userAddress,jdbcType=VARCHAR}, #{item.balance,jdbcType=BIGINT},#{item.coinType,jdbcType=VARCHAR},#{item.contractId,jdbcType=VARCHAR},
      #{item.transNum,jdbcType=INTEGER}, #{item.lastTrxTime,jdbcType=TIMESTAMP}, now(),
      now())
    </foreach>
  </insert>

  <select id="countByExampleDistinct" parameterType="com.achain.domain.entity.UserAddressCriteria" resultType="java.lang.Integer" >
    select count(DISTINCT user_address) from tb_user_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
</mapper>